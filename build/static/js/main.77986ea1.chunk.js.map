{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","components/ControlPresupuesto.js","components/helpers.js","App.js","serviceWorker.js","index.js"],"names":["Error","txt","className","Pregunta","setRestBudget","setValueBudget","setShow","useState","budget","setBudget","error","setError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","setExpense","setCreateExpense","name","setName","less","setLess","trim","data","nombre","gasto","id","shortid","generate","Gasto","ex","Listado","expenses","map","key","protoTypes","PropTypes","array","isRequired","ControlPresupuesto","rest","valueBudget","restBudget","number","App","show","setExpenses","expense","createExpense","useEffect","budgetLess","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"qOAaeA,EAVD,SAAC,GAAW,IAAVC,EAAS,EAATA,IACd,OACE,uBAAGC,UAAU,4BAA4BD,ICoD9BE,EArDE,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,cAAeC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,QAAa,EACjCC,mBAAS,GADwB,mBACtDC,EADsD,KAC9CC,EAD8C,OAEnCF,oBAAS,GAF0B,mBAEtDG,EAFsD,KAE/CC,EAF+C,KAuB7D,OACE,kBAAC,WAAD,KACE,qDAECD,GAAS,kBAAC,EAAD,CAAOT,IAAI,iCAErB,0BAAMW,SArBiB,SAAAC,GACzBA,EAAEC,iBAECN,EAAS,GAAKO,MAAMP,GACrBG,GAAS,IAIXA,GAAS,GAETN,EAAeG,GACfJ,EAAcI,GACdF,GAAQ,MAUJ,2BACEU,KAAK,SACLd,UAAU,eACVe,YAAY,wBACZC,SA9BQ,SAAAL,GACdJ,EAAUU,SAASN,EAAEO,OAAOC,WAgCxB,2BACEL,KAAK,SACLd,UAAU,sBACVmB,MAAM,e,gBC2BDC,EAlEI,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,iBAAsB,EAC7BjB,mBAAS,IADoB,mBAC9CkB,EAD8C,KACxCC,EADwC,OAE7BnB,mBAAS,GAFoB,mBAE9CoB,EAF8C,KAExCC,EAFwC,OAG3BrB,oBAAS,GAHkB,mBAG9CG,EAH8C,KAGvCC,EAHuC,KA0BrD,OACE,0BAAMC,SAtBa,SAAAC,GAGnB,GAFAA,EAAEC,iBAECa,EAAO,GAAKZ,MAAMY,IAAyB,KAAhBF,EAAKI,OACjClB,GAAS,OADX,CAKAA,GAAS,GACT,IAAMmB,EAAO,CACXC,OAAQN,EACRO,MAAOL,EACPM,GAAIC,IAAQC,YAGdZ,EAAWO,GACXN,GAAiB,GACjBE,EAAQ,IACRE,EAAQ,MAKN,0DAEClB,GAAS,kBAAC,EAAD,CAAOT,IAAI,+DAErB,yBAAKC,UAAU,SACb,+CACA,2BACEc,KAAK,OACLd,UAAU,eACVe,YAAY,YACZI,MAAOI,EACPP,SAAU,SAAAL,GAAC,OAAIa,EAAQb,EAAEO,OAAOC,WAGpC,yBAAKnB,UAAU,SACb,iDACA,2BACEc,KAAK,SACLd,UAAU,eACVe,YAAY,UACZI,MAAOM,EACPT,SAAU,SAAAL,GAAC,OAAIe,EAAQT,SAASN,EAAEO,OAAOC,YAG7C,2BACEL,KAAK,SACLd,UAAU,sBACVmB,MAAM,cC1CCe,EAfD,SAAC,GAAU,IAATC,EAAQ,EAARA,GACd,OACE,wBAAInC,UAAU,UACZ,2BACGmC,EAAGN,OACJ,0BAAM7B,UAAU,SAAhB,KAA2BmC,EAAGL,U,gBCJhCM,EAAU,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAChB,OACE,yBAAKrC,UAAU,qBACb,uCAEEqC,EAASC,KAAI,SAAAH,GAAE,OACb,kBAAC,EAAD,CACEI,IAAKJ,EAAGJ,GACRI,GAAIA,SAQhBC,EAAQI,WAAa,CACnBH,SAAUI,IAAUC,MAAMC,YAGbP,QCpBTQ,EAAqB,SAAC,GAA+B,ICJxBtC,EAAQuC,EDIdC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,WAExC,OACE,kBAAC,WAAD,KACE,yBAAK/C,UAAU,uBAAf,kBACkB8C,GAElB,yBAAK9C,WCXwBM,EDWMwC,ECXED,EDWWE,ECRhDzC,EAAS,EAAKuC,EACR,qBACCvC,EAAS,EAAKuC,EACf,sBAEA,wBDGN,eACeE,KAMrBH,EAAmBJ,WAAa,CAC9BM,YAAaL,IAAUO,OAAOL,WAC9BI,WAAYN,IAAUO,OAAOL,YAGhBC,QE6CAK,MA9Df,WAAgB,IAAD,EACyB5C,mBAAS,GADlC,mBACNyC,EADM,KACO3C,EADP,OAEuBE,mBAAS,GAFhC,mBAEN0C,EAFM,KAEM7C,EAFN,OAGWG,oBAAS,GAHpB,mBAGN6C,EAHM,KAGA9C,EAHA,OAImBC,mBAAS,IAJ5B,mBAINgC,EAJM,KAIIc,EAJJ,OAKiB9C,mBAAS,IAL1B,mBAKN+C,EALM,KAKG/B,EALH,OAM6BhB,oBAAS,GANtC,mBAMNgD,EANM,KAMS/B,EANT,KAqBb,OAbAgC,qBAAU,WACR,GAAGD,EAAc,CACfF,EAAY,GAAD,mBACNd,GADM,CAETe,KAEF,IAAMG,EAAaR,EAAaK,EAAQtB,MACxC5B,EAAcqD,GAEdjC,GAAiB,MAElB,CAAC8B,EAASf,EAAUgB,EAAeN,IAGpC,yBAAK/C,UAAU,aACb,gCACE,6CAEA,yBAAKA,UAAU,iCAEXkD,EACE,kBAAC,EAAD,CACEhD,cAAeA,EACfC,eAAgBA,EAChBC,QAASA,IAGX,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,CACEqB,WAAYA,EACZC,iBAAkBA,KAGtB,yBAAKtB,UAAU,mBACb,kBAAC,EAAD,CACEqC,SAAUA,IAGZ,kBAAC,EAAD,CACES,YAAaA,EACbC,WAAYA,UC3CZS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhE,GACLiE,QAAQjE,MAAMA,EAAMkE,c","file":"static/js/main.77986ea1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = ({txt}) => {\n  return (\n    <p className=\"alert alert-danger error\">{txt}</p>  \n  )\n}\n\nError.propTypes = {\n  txt: PropTypes.string.isRequired,\n}\n\nexport default Error;\n","import React, {Fragment, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Error from './Error';\n\nconst Pregunta = ({setRestBudget, setValueBudget, setShow}) => {\n  const [budget, setBudget] = useState(0);\n  const [error, setError] = useState(false);\n\n  const cambiar = e => {\n    setBudget(parseInt(e.target.value));\n  }\n\n  const agregarPresupuesto = e => {\n    e.preventDefault();\n\n    if(budget < 1 || isNaN(budget)) {\n      setError(true);\n      return;\n    }\n\n    setError(false);\n\n    setValueBudget(budget);\n    setRestBudget(budget);\n    setShow(false);\n  }\n\n  return (\n    <Fragment>\n      <h2>Coloca tu presupuesto</h2>\n\n      {error && <Error txt=\"El presupuesto es incorrecto\" /> }\n\n      <form onSubmit={agregarPresupuesto}>\n        <input\n          type=\"number\"\n          className=\"u-full-width\"\n          placeholder=\"Colaca tu presupuesto\"\n          onChange={cambiar}\n        />\n\n        <input\n          type=\"submit\" \n          className=\"button u-full-width\"\n          value=\"Guardar\"\n        />\n      </form>\n    </Fragment>\n  )\n}\n\nPregunta.propTypes = {\n  setRestBudget: PropTypes.func.isRequired,\n  setValueBudget: PropTypes.func.isRequired,\n  setShow: PropTypes.func.isRequired,\n}\n\nexport default Pregunta;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport Error from './Error';\n\nconst Formulario = ({setExpense, setCreateExpense}) => {\n  const [name, setName] = useState('');\n  const [less, setLess] = useState(0);\n  const [error, setError] = useState(false);\n\n  const agregarGasto = e => {\n    e.preventDefault();\n\n    if(less < 1 || isNaN(less) || name.trim() === '') {\n      setError(true);\n      return;\n    }\n\n    setError(false);\n    const data = {\n      nombre: name,\n      gasto: less,\n      id: shortid.generate()\n    };\n\n    setExpense(data);\n    setCreateExpense(true);\n    setName('');\n    setLess(0);\n  }\n\n  return (\n    <form onSubmit={agregarGasto}>\n      <h2>Agregar tus gastos aqu√≠</h2>\n\n      {error && <Error txt=\"Los campos son obligatorios o el presupuesto es incorrecto\" />}\n\n      <div className=\"campo\">\n        <label>Nombre gasto</label>\n        <input\n          type=\"text\"\n          className=\"u-full-width\"\n          placeholder=\"Ej. Renta\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n      </div>\n      <div className=\"campo\">\n        <label>Cantidad gasto</label>\n        <input\n          type=\"number\"\n          className=\"u-full-width\"\n          placeholder=\"Ej. 300\"\n          value={less}\n          onChange={e => setLess(parseInt(e.target.value))}\n        />\n      </div>\n      <input \n        type=\"submit\"\n        className=\"button u-full-width\"\n        value=\"Agregar\"\n      />\n    </form>\n  )\n}\n\nFormulario.propTypes = {\n  setExpense: PropTypes.func.isRequired,\n  setCreateExpense: PropTypes.func.isRequired,\n}\n\nexport default Formulario;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Gasto = ({ex}) => {\n  return (\n    <li className=\"gastos\">\n      <p>\n        {ex.nombre}\n        <span className=\"gasto\">$ {ex.gasto}</span>\n      </p>\n    </li>\n  )\n}\n\nGasto.propTypes = {\n  ex: PropTypes.object.isRequired,\n}\n\nexport default Gasto;\n","import React from 'react';\nimport Gasto from './Gasto';\nimport PropTypes from 'prop-types';\n\nconst Listado = ({expenses}) => {\n  return (\n    <div className=\"gastos-realizados\">\n      <h2>Listado</h2>\n      {\n        expenses.map(ex => (\n          <Gasto\n            key={ex.id}\n            ex={ex}\n          />\n        ))\n      }\n    </div>\n  )\n}\n\nListado.protoTypes = {\n  expenses: PropTypes.array.isRequired,\n}\n\nexport default Listado;\n","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {revisarPresupuesto} from './helpers';\n\nconst ControlPresupuesto = ({valueBudget, restBudget}) => {\n  //console.log(restBudget, valueBudget)\n  return (\n    <Fragment>\n      <div className=\"alert alert-primary\">\n        Presupuesto: $ {valueBudget}\n      </div>\n      <div className={revisarPresupuesto(valueBudget, restBudget)}>\n        Restante: $ {restBudget}\n      </div>\n    </Fragment>\n  )\n}\n\nControlPresupuesto.protoTypes = {\n  valueBudget: PropTypes.number.isRequired,\n  restBudget: PropTypes.number.isRequired,\n}\n\nexport default ControlPresupuesto;\n","export const revisarPresupuesto = (budget, rest) => {\n  let clase;\n\n  if((budget / 4) > rest) {\n    clase = 'alert alert-danger';\n  } else if((budget / 2) > rest) {\n    clase = 'alert alert-warning';\n  } else {\n    clase = 'alert alert-success';\n  }\n  return clase;\n}","import React, {useState, useEffect} from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nfunction App() {\n  const [valueBudget, setValueBudget] = useState(0);\n  const [restBudget, setRestBudget] = useState(0);\n  const [show, setShow] = useState(true);\n  const [expenses, setExpenses] = useState([]);\n  const [expense, setExpense] = useState({});\n  const [createExpense, setCreateExpense] = useState(false);\n\n  useEffect(() => {\n    if(createExpense){\n      setExpenses([\n        ...expenses,\n        expense\n      ]);\n      const budgetLess = restBudget - expense.gasto;\n      setRestBudget(budgetLess);\n\n      setCreateExpense(false);\n    }\n  }, [expense, expenses, createExpense, restBudget]);\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n\n        <div className=\"contenido-principal contenido\">\n          {\n            show ? (\n              <Pregunta\n                setRestBudget={setRestBudget}\n                setValueBudget={setValueBudget}\n                setShow={setShow}\n              />\n            ) : (\n              <div className=\"row\">\n                <div className=\"one-half column\">\n                  <Formulario \n                    setExpense={setExpense}\n                    setCreateExpense={setCreateExpense}\n                  />\n                </div>\n                <div className=\"one-half column\">\n                  <Listado \n                    expenses={expenses}\n                  />\n\n                  <ControlPresupuesto \n                    valueBudget={valueBudget}\n                    restBudget={restBudget}\n                  />\n                </div>\n              </div>\n            )\n          }\n\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}